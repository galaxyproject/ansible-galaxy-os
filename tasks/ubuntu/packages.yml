---
# Install system packages
- name: Add custom Galaxy PPA (used for nginx package)
  apt_repository: repo="ppa:galaxyproject/nginx" update_cache=no
  when: ansible_distribution_version <= "16.04"

- name: Pin Galaxy's versions of the PPAs so they take priority over the defaults
  copy: src=galaxyproject-nginx-pin-600 dest=/etc/apt/preferences.d/galaxyproject-nginx-pin-600
  when: ansible_distribution_version <= "16.04"

- name: Add custom Galaxy PPA (used for Slurm DRMAA package in Ubuntu 18.04)
  apt_repository: 
    repo: ppa:natefoo/slurm-drmaa
    state: present
    update_cache: yes
  when: ansible_distribution_version == "18.04" or ansible_distribution_version == "20.04"

- name: Add Docker repository key (Ubuntu 14.04)
  apt_key: keyserver=hkp://p80.pool.sks-keyservers.net:80 id=58118E89F3A912897C070ADBF76221572C52609D
  when: configure_docker and ansible_distribution_version == "14.04"

- name: Add Docker repository
  apt_repository: repo='deb https://apt.dockerproject.org/repo ubuntu-{{ ansible_distribution_release }} main' update_cache=no #'
  when: configure_docker and ansible_distribution_version == "14.04"

- name: Add gpg-agent package
  apt:
    pkg: gpg-agent
  when: ansible_distribution_version >= "18.04"

- name: Add Docker GPG key (Ubuntu >14.04)
  apt_key: url=https://download.docker.com/linux/ubuntu/gpg
  when: configure_docker and ansible_distribution_version > "14.04"

- name: Add Docker repository (Ubuntu >14.04)
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    update_cache: no
  when: configure_docker and ansible_distribution_version > "14.04"

- name: Update APT cache
  apt: update_cache=yes

- name: Install required system packages for 14.04, 16.04 or 18.04
  apt:
    pkg:
      - ant
      - cmake
      - curl
      - g++
      - gcc
      - gfortran
      - git-core
      - libffi-dev
      - liblapack-dev
      - libncurses5-dev
      - libopenblas-dev
      - libpam0g-dev
      - libpq-dev
      - libsparsehash-dev
      - make
      - mercurial
      - nginx-extras
      - openssh-server
      - patch
      - pkg-config
      - python-boto
      - python-dev
      - python-prettytable
      - python-psycopg2
      - python-virtualenv
      - python-pip
      - rsync
      - samtools
      - supervisor
      - swig
      - sysstat
      - unzip
      - wget
      - zlib1g-dev
    state: "{{ package_state }}"
    install_recommends: no
    when: ansible_distribution_version == "14.04" or ansible_distribution_version == "16.04" or ansible_distribution_version == "18.04"


- name: Install required system packages for Ubuntu 20.04
  apt:
    pkg:
      - ant
      - cmake
      - curl
      - g++
      - gcc
      - gfortran
      - git-core
      - libffi-dev
      - liblapack-dev
      - libncurses5-dev
      - libopenblas-dev
      - libpam0g-dev
      - libpq-dev
      - libsparsehash-dev
      - make
      - mercurial
      - nginx-extras
      - openssh-server
      - patch
      - pkg-config
      - python3-boto
      - python-dev
      - python3-prettytable
      - python3-psycopg2
      - python3-virtualenv
      - python-pip-whl
      - rsync
      - samtools
      - supervisor
      - swig
      - sysstat
      - unzip
      - wget
      - zlib1g-dev
    state: "{{ package_state }}"
    install_recommends: no
    when: ansible_distribution_version == "20.04"



- name: Add Slurm DRMAA package
  apt:
    pkg: slurm-drmaa-dev
    state: "{{ package_state }}"
  when: install_slurm_drmaa_lib

- name: Install packages for system maintenance
  apt:
    pkg:
      - atop
      - bioperl
      - ipython
      - iotop
      - htop
      - iftop
      - nmon
      - vim
    state: "{{ package_state }}"
  when: install_maintainance_packages

- name: Install required system packages - 14.04
  apt:
    pkg:
      - postgresql-9.3
      - postgresql-client-9.3
      - postgresql-plpython-9.3
      - postgresql-server-dev-9.3
    state: "{{ package_state }}"
  when: ansible_distribution_version == "14.04"

- name: Install required system packages - 16.04
  apt:
    pkg:
      - postgresql-9.5
      - postgresql-client-9.5
      - postgresql-plpython-9.5
      - postgresql-server-dev-9.5
      - virtualenv
    state: "{{ package_state }}"
  when: ansible_distribution_version == "16.04"

- name: Install required system packages - 18.04
  apt:
    pkg:
      - postgresql-10
      - postgresql-client-10
      - postgresql-plpython-10
      - postgresql-server-dev-10
      - virtualenv
    state: "{{ package_state }}"
  when: ansible_distribution_version == "18.04"

- name: Install required system packages - 20.04
  apt:
    pkg:
      - postgresql-12
      - postgresql-client-12
      - postgresql-plpython3-12
      - postgresql-server-dev-12
      - virtualenv
    state: "{{ package_state }}"
  when: ansible_distribution_version == "20.04"


- name: Clean up
  apt:
    autoclean: yes
    autoremove: yes
